[
["_main.html", "Exploratory Data Analysis on [Researchers Name]’s data 1 Introduction 2 QC of the sequencing samples 3 Alignment to the reference genome 4 Overview and creation of the count table 5 Creation of the design matrix and sample info 6 Samples exploration and assessment 7 Differential Expression analysis", " Exploratory Data Analysis on [Researchers Name]’s data ProjectID [ProjectID] - [list researchers name] [bioinformaticians name]- Institute of Medical Biostatistics, Epidemiology and Informatics (IMBEI) - [email]@uni-mainz.de University Medical Center - Mainz (Germany) 9 November 2018 1 Introduction path_to_ref_genome &lt;- &quot;/Users/franziska/Documents/Intro_rna_seq/data/human/GRChr38/annotation/Homo_sapiens.GRCh38.77.gtf&quot; is_paired_end &lt;- c(&quot;paired-end&quot; = FALSE, &quot;single-end&quot; = TRUE) design_formula &lt;- as.formula(&quot;~ condition&quot;) test_for &lt;- &quot;ko_del_vs_control&quot; organ_dataset &lt;- &quot;hsapiens_gene_ensembl&quot; RNA-seq samples were derived from [source_samples], obtaining a total of 5 different samples. More on the specific design is in the main sections. For more information and an overview, see the figures and the tables in the main text. All samples were sequenced with reads of [???] nucleotides, using a single-end library preparation (unstranded sequencing kit). This report provides a detailed overview of the steps taken to perform a comprehensive exploratory data analysis. library(&quot;DESeq2&quot;) library(&quot;ggplot2&quot;) library(&quot;ideal&quot;) 2 QC of the sequencing samples An overview of the sequenced samples is obtained with the FastQC tool (available at http://www.bioinformatics.babraham.ac.uk/projects/fastqc/). Inspecting the produced results, the quality is in line with good datasets. 3 Alignment to the reference genome Short reads alignment was performed with the ENSEMBL Homo_sapiens.GRCh38.77 chosen as the reference genome. The corresponding annotation (ENSEMBL v76) was also retrieved from the ENSEMBL FTP website http://www.ensembl.org/info/data/ftp/index.html. The STAR aligner ([version number]) was used to perform the mapping to the reference genome. 4 Overview and creation of the count table The available samples were reconstructed from the shared archive files. The raw .fastq files are available in compressed .gz format in the _fastqFiles folder. The following samples are the relevant ones: list.files(&quot;_alignedData/&quot;,pattern=&quot;(h_).*.bam$&quot;) ## character(0) Following the read mapping step, we proceeded working with .bam files. We processed them with the featureCounts function of the Rsubread package, using the annotation file we also used for supporting the alignment. (bam_files &lt;- list.files(&quot;_alignedData/&quot;,pattern=&quot;(h_).*.bam$&quot;,full.names=TRUE)) fc_result &lt;- Rsubread::featureCounts(files=bam_files, annot.ext=path_to_ref_genome, isGTFAnnotationFile=TRUE, nthreads=parallel::detectCores()/2, isPairedEnd=is_paired_end[&quot;paired-end&quot;]) save(fc_result,file=&quot;results/fc_result.RData&quot;) 5 Creation of the design matrix and sample info samplesDesign &lt;- data.frame( fastqfile = list.files(&quot;_fastqFiles&quot;,pattern = &quot;.fastq.gz$&quot;, full.names = TRUE), bamfile = list.files(&quot;_alignedData/&quot;,pattern = &quot;.bam$&quot;, full.names = TRUE), condition = c(&quot;control&quot;, &quot;control&quot;, &quot;ko_del&quot;, &quot;ko_del&quot;, &quot;ko_del&quot;), replNr = paste0(&quot;R&quot;,c(1,2,1,2,3)), partner = &quot;Alma&quot;, stringsAsFactors = FALSE ) samplesDesign$sampleID &lt;- paste0(samplesDesign$condition,&quot;_&quot;,samplesDesign$replNr) samplesDesign$sampleName &lt;- samplesDesign$sampleID write.csv(samplesDesign, file = &quot;data/samplesDesign.csv&quot;, row.names = FALSE) load(&quot;results/fc_result.RData&quot;) samplesDesign &lt;- read.csv(&quot;data/samplesDesign.csv&quot;) samplesDesign$bamfile &lt;- gsub(&quot;X_alignedData.&quot;,&quot;&quot;,colnames(fc_result$counts)) knitr::kable(samplesDesign) fastqfile bamfile condition replNr partner sampleID sampleName _fastqFiles/Alma_1.fastq.gz Alma_1_Aligned.out.bam control R1 Alma control_R1 control_R1 _fastqFiles/Alma_2.fastq.gz Alma_2_Aligned.out.bam control R2 Alma control_R2 control_R2 _fastqFiles/Alma_3.fastq.gz Alma_3_Aligned.out.bam ko_del R1 Alma ko_del_R1 ko_del_R1 _fastqFiles/Alma_4.fastq.gz Alma_4_Aligned.out.bam ko_del R2 Alma ko_del_R2 ko_del_R2 _fastqFiles/Alma_5.fastq.gz Alma_5_Aligned.out.bam ko_del R3 Alma ko_del_R3 ko_del_R3 6 Samples exploration and assessment We construct the dds objects which will contain all the required info for testing counts &lt;- fc_result$counts dds &lt;- DESeqDataSetFromMatrix(counts, samplesDesign, design = design_formula) colnames(dds) &lt;- samplesDesign$sampleID rld_dds &lt;- rlogTransformation(dds) Remove all the rows where no signal could be detected at all: dds &lt;- dds[rowSums(counts(dds)) &gt; 1, ] nrow(dds) ## [1] 18877 The regularized log transformed values were used to perform sample clustering and principal component analysis (PCA). pheatmap:::pheatmap(as.matrix(dist(t(assay(rld_dds))))) [Comment on heatmap] Create the PCA plots of all three datasets, again for comparison: top_genes &lt;- c(500, 5000, 20000) for (g in top_genes) { print(pcaExplorer:::pcaplot(rld_dds, ntop=g, title = paste0(&quot;top&quot;, g, &quot; genes - global&quot;), ellipse = F)) } [Comment on PCA plot] pcaExplorer::pcascree(prcomp(t(assay(rld_dds[,])),center = T)) 7 Differential Expression analysis FDR &lt;- 0.05 We set the False Discovery Rate to 5%, and perform the following steps, we obtain the full set of Differentially Expressed genes, i.e. the ones that (regardless of the lfc) show robust significant differences in the expression among conditions. dds &lt;- DESeq(dds) ## estimating size factors ## estimating dispersions ## gene-wise dispersion estimates ## mean-dispersion relationship ## final dispersion estimates ## fitting model and testing 7.0.1 Ko Del Vs Control resultsNames(dds) ## [1] &quot;Intercept&quot; &quot;condition_ko_del_vs_control&quot; res_condition &lt;- results(dds, name = paste0(&quot;condition_&quot;, test_for), alpha = FDR) res_condition &lt;- lfcShrink(dds, coef = paste0(&quot;condition_&quot;, test_for), type = &quot;apeglm&quot;, res = res_condition) ## using &#39;apeglm&#39; for LFC shrinkage. If used in published research, please cite: ## Zhu, A., Ibrahim, J.G., Love, M.I. (2018) Heavy-tailed prior distributions for ## sequence count data: removing the noise and preserving large differences. ## bioRxiv. https://doi.org/10.1101/303255 summary(res_condition) ## ## out of 18877 with nonzero total read count ## adjusted p-value &lt; 0.05 ## LFC &gt; 0 (up) : 669, 3.5% ## LFC &lt; 0 (down) : 342, 1.8% ## outliers [1] : 3, 0.016% ## low counts [2] : 6222, 33% ## (mean count &lt; 6) ## [1] see &#39;cooksCutoff&#39; argument of ?results ## [2] see &#39;independentFiltering&#39; argument of ?results plot_ma(res_condition, ylim = c(-2,2), title = paste(&quot;Result of&quot;, stringr::str_to_title( stringr::str_replace_all(test_for, pattern = &quot;_&quot;, &quot; &quot;))), FDR = FDR) tbl_res_condition &lt;- deseqresult2tbl(res_condition) tbl_res_alma_ko_vs_ctrl$geneSymbol &lt;- anno_df$gene_name[match(tbl_res_alma_ko_vs_ctrl$id, anno_df$gene_id)] tbl_res_alma_ko_vs_ctrl$description &lt;- anns$description[match(tbl_res_alma_ko_vs_ctrl$id, anns$ensembl_gene_id)] mart &lt;- biomaRt:::useMart(biomart=&quot;ENSEMBL_MART_ENSEMBL&quot;, host=&quot;www.ensembl.org&quot;, dataset=organ_dataset) anns &lt;- getBM( attributes = c(&quot;ensembl_gene_id&quot;, &quot;external_gene_name&quot;, &quot;description&quot;), filters = &quot;ensembl_gene_id&quot;, values = rownames(dds_marie), mart = mart) anns &lt;- anns[match(rownames(dds_marie), anns[, 1]), ] anno_df &lt;- pcaExplorer::get_annotation(dds_marie,&quot;hsapiens_gene_ensembl&quot;,&quot;ensembl_gene_id&quot;) tbl_DEres_marie_inside_vs_outside &lt;- deseqresult2DEgenes(res_marie_inside_vs_outside,FDR = FDR) tbl_DEres_marie_inside_vs_outside$geneSymbol &lt;- anno_df$gene_name[match(tbl_DEres_marie_inside_vs_outside$id, anno_df$gene_id)] tbl_DEres_marie_inside_vs_outside$description &lt;- anns$description[match(tbl_DEres_marie_inside_vs_outside$id, anns$ensembl_gene_id)] etbl_DEres_marie_inside_vs_outside &lt;- tbl_DEres_marie_inside_vs_outside etbl_DEres_marie_inside_vs_outside$id &lt;- ideal:::createLinkENS(etbl_DEres_marie_inside_vs_outside$id, species = &quot;Homo_sapiens&quot;) etbl_DEres_marie_inside_vs_outside$geneSymbol &lt;- ideal:::createLinkGeneSymbol(etbl_DEres_marie_inside_vs_outside$geneSymbol) mybuttons &lt;- c(&#39;copy&#39;, &#39;csv&#39;, &#39;excel&#39;, &#39;pdf&#39;, &#39;print&#39;) datatable(etbl_DEres_marie_inside_vs_outside,caption = &quot;petridish_tumor_vs_primtum, DE genes&quot;,escape=F, extensions = &#39;Buttons&#39;, options = list(pageLength = 50,dom = &#39;Bfrtip&#39;,buttons = mybuttons)) 7.0.2 Get Gene Names and Annotations bla &lt;- 0 7.0.3 Result of Ko Del Vs Control tbl_res_condition &lt;- deseqresult2tbl(res_condition) tbl_res_alma_ko_vs_ctrl$geneSymbol &lt;- anno_df$gene_name[match(tbl_res_alma_ko_vs_ctrl$id, anno_df$gene_id)] tbl_res_alma_ko_vs_ctrl$description &lt;- anns$description[match(tbl_res_alma_ko_vs_ctrl$id, anns$ensembl_gene_id)] "]
]
